// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.github.dawidd6.andttt.proto;

/**
 * Protobuf enum {@code proto.ERROR}
 */
public enum ERROR
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NONE = 0;</code>
   */
  NONE(0),
  /**
   * <code>UNDEFINED_ERROR = 1;</code>
   */
  UNDEFINED_ERROR(1),
  /**
   * <code>NAME_MUST_NOT_BE_EMPTY = 2;</code>
   */
  NAME_MUST_NOT_BE_EMPTY(2),
  /**
   * <code>NAME_ALREADY_TAKEN = 3;</code>
   */
  NAME_ALREADY_TAKEN(3),
  /**
   * <code>NAME_CONN_ALREADY_EXISTS = 4;</code>
   */
  NAME_CONN_ALREADY_EXISTS(4),
  /**
   * <code>CLIENT_NOT_FOUND = 5;</code>
   */
  CLIENT_NOT_FOUND(5),
  /**
   * <code>CLIENT_CONN_NOT_FOUND = 6;</code>
   */
  CLIENT_CONN_NOT_FOUND(6),
  /**
   * <code>CLIENT_ALREADY_HAS_A_ROOM = 7;</code>
   */
  CLIENT_ALREADY_HAS_A_ROOM(7),
  /**
   * <code>CLIENT_HAS_NO_ROOM = 8;</code>
   */
  CLIENT_HAS_NO_ROOM(8),
  /**
   * <code>ROOM_ALREADY_EXISTS = 9;</code>
   */
  ROOM_ALREADY_EXISTS(9),
  /**
   * <code>ROOM_NAME_EMPTY = 10;</code>
   */
  ROOM_NAME_EMPTY(10),
  /**
   * <code>ROOM_NOT_FOUND = 11;</code>
   */
  ROOM_NOT_FOUND(11),
  /**
   * <code>ROOM_NOT_EMPTY = 12;</code>
   */
  ROOM_NOT_EMPTY(12),
  /**
   * <code>ROOM_FULL = 13;</code>
   */
  ROOM_FULL(13),
  /**
   * <code>NO_CLIENTS_AVAILABLE = 14;</code>
   */
  NO_CLIENTS_AVAILABLE(14),
  /**
   * <code>NO_ROOMS_AVAILABLE = 15;</code>
   */
  NO_ROOMS_AVAILABLE(15),
  /**
   * <code>ENEMY_NOT_FOUND = 16;</code>
   */
  ENEMY_NOT_FOUND(16),
  /**
   * <code>POSITION_ALREADY_OCCUPIED = 17;</code>
   */
  POSITION_ALREADY_OCCUPIED(17),
  /**
   * <code>NIL_CONN = 18;</code>
   */
  NIL_CONN(18),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NONE = 0;</code>
   */
  public static final int NONE_VALUE = 0;
  /**
   * <code>UNDEFINED_ERROR = 1;</code>
   */
  public static final int UNDEFINED_ERROR_VALUE = 1;
  /**
   * <code>NAME_MUST_NOT_BE_EMPTY = 2;</code>
   */
  public static final int NAME_MUST_NOT_BE_EMPTY_VALUE = 2;
  /**
   * <code>NAME_ALREADY_TAKEN = 3;</code>
   */
  public static final int NAME_ALREADY_TAKEN_VALUE = 3;
  /**
   * <code>NAME_CONN_ALREADY_EXISTS = 4;</code>
   */
  public static final int NAME_CONN_ALREADY_EXISTS_VALUE = 4;
  /**
   * <code>CLIENT_NOT_FOUND = 5;</code>
   */
  public static final int CLIENT_NOT_FOUND_VALUE = 5;
  /**
   * <code>CLIENT_CONN_NOT_FOUND = 6;</code>
   */
  public static final int CLIENT_CONN_NOT_FOUND_VALUE = 6;
  /**
   * <code>CLIENT_ALREADY_HAS_A_ROOM = 7;</code>
   */
  public static final int CLIENT_ALREADY_HAS_A_ROOM_VALUE = 7;
  /**
   * <code>CLIENT_HAS_NO_ROOM = 8;</code>
   */
  public static final int CLIENT_HAS_NO_ROOM_VALUE = 8;
  /**
   * <code>ROOM_ALREADY_EXISTS = 9;</code>
   */
  public static final int ROOM_ALREADY_EXISTS_VALUE = 9;
  /**
   * <code>ROOM_NAME_EMPTY = 10;</code>
   */
  public static final int ROOM_NAME_EMPTY_VALUE = 10;
  /**
   * <code>ROOM_NOT_FOUND = 11;</code>
   */
  public static final int ROOM_NOT_FOUND_VALUE = 11;
  /**
   * <code>ROOM_NOT_EMPTY = 12;</code>
   */
  public static final int ROOM_NOT_EMPTY_VALUE = 12;
  /**
   * <code>ROOM_FULL = 13;</code>
   */
  public static final int ROOM_FULL_VALUE = 13;
  /**
   * <code>NO_CLIENTS_AVAILABLE = 14;</code>
   */
  public static final int NO_CLIENTS_AVAILABLE_VALUE = 14;
  /**
   * <code>NO_ROOMS_AVAILABLE = 15;</code>
   */
  public static final int NO_ROOMS_AVAILABLE_VALUE = 15;
  /**
   * <code>ENEMY_NOT_FOUND = 16;</code>
   */
  public static final int ENEMY_NOT_FOUND_VALUE = 16;
  /**
   * <code>POSITION_ALREADY_OCCUPIED = 17;</code>
   */
  public static final int POSITION_ALREADY_OCCUPIED_VALUE = 17;
  /**
   * <code>NIL_CONN = 18;</code>
   */
  public static final int NIL_CONN_VALUE = 18;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ERROR valueOf(int value) {
    return forNumber(value);
  }

  public static ERROR forNumber(int value) {
    switch (value) {
      case 0: return NONE;
      case 1: return UNDEFINED_ERROR;
      case 2: return NAME_MUST_NOT_BE_EMPTY;
      case 3: return NAME_ALREADY_TAKEN;
      case 4: return NAME_CONN_ALREADY_EXISTS;
      case 5: return CLIENT_NOT_FOUND;
      case 6: return CLIENT_CONN_NOT_FOUND;
      case 7: return CLIENT_ALREADY_HAS_A_ROOM;
      case 8: return CLIENT_HAS_NO_ROOM;
      case 9: return ROOM_ALREADY_EXISTS;
      case 10: return ROOM_NAME_EMPTY;
      case 11: return ROOM_NOT_FOUND;
      case 12: return ROOM_NOT_EMPTY;
      case 13: return ROOM_FULL;
      case 14: return NO_CLIENTS_AVAILABLE;
      case 15: return NO_ROOMS_AVAILABLE;
      case 16: return ENEMY_NOT_FOUND;
      case 17: return POSITION_ALREADY_OCCUPIED;
      case 18: return NIL_CONN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ERROR>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ERROR> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ERROR>() {
          public ERROR findValueByNumber(int number) {
            return ERROR.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.github.dawidd6.andttt.proto.MessageOuterClass.getDescriptor().getEnumTypes().get(1);
  }

  private static final ERROR[] VALUES = values();

  public static ERROR valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ERROR(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:proto.ERROR)
}

